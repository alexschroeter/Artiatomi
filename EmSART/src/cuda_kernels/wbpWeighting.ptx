//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21112126
// Cuda compilation tools, release 8.0, V8.0.43
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_35
.address_size 64

	// .globl	wbpWeighting
.global .texref texVol;

.visible .entry wbpWeighting(
	.param .u64 wbpWeighting_param_0,
	.param .u64 wbpWeighting_param_1,
	.param .u32 wbpWeighting_param_2,
	.param .f32 wbpWeighting_param_3,
	.param .u32 wbpWeighting_param_4
)
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<76>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [wbpWeighting_param_0];
	ld.param.u64 	%rd2, [wbpWeighting_param_1];
	ld.param.u32 	%r3, [wbpWeighting_param_2];
	ld.param.f32 	%f13, [wbpWeighting_param_3];
	ld.param.u32 	%r4, [wbpWeighting_param_4];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r7;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r2, %r8, %r9, %r10;
	shr.u32 	%r11, %r3, 1;
	add.s32 	%r12, %r11, 1;
	setp.ge.u32	%p1, %r1, %r12;
	setp.ge.u32	%p2, %r2, %r3;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB0_17;

	cvt.rn.f32.u32	%f15, %r1;
	cvt.rn.f32.u32	%f16, %r3;
	mul.ftz.f32 	%f17, %f16, 0f3F000000;
	cvt.rn.f32.u32	%f18, %r2;
	setp.gt.ftz.f32	%p4, %f18, %f17;
	sub.ftz.f32 	%f19, %f16, %f18;
	neg.ftz.f32 	%f20, %f19;
	selp.f32	%f21, %f20, %f18, %p4;
	sin.approx.ftz.f32 	%f22, %f13;
	cos.approx.ftz.f32 	%f23, %f13;
	mul.ftz.f32 	%f24, %f21, %f23;
	fma.rn.ftz.f32 	%f25, %f15, %f22, %f24;
	div.approx.ftz.f32 	%f26, %f25, %f16;
	mov.f32 	%f27, 0f40000000;
	div.approx.ftz.f32 	%f1, %f26, %f27;
	mov.f32 	%f75, 0f3F800000;
	setp.gt.s32	%p5, %r4, 2;
	@%p5 bra 	BB0_7;

	setp.eq.s32	%p8, %r4, 0;
	@%p8 bra 	BB0_15;
	bra.uni 	BB0_3;

BB0_15:
	abs.ftz.f32 	%f64, %f1;
	mov.f32 	%f65, 0f3F800000;
	min.ftz.f32 	%f75, %f64, %f65;
	bra.uni 	BB0_16;

BB0_7:
	setp.eq.s32	%p6, %r4, 3;
	@%p6 bra 	BB0_12;
	bra.uni 	BB0_8;

BB0_12:
	setp.eq.ftz.f32	%p11, %f1, 0f00000000;
	mov.f32 	%f40, 0f00000000;
	mov.f32 	%f73, %f40;
	@%p11 bra 	BB0_14;

	abs.ftz.f32 	%f41, %f1;
	lg2.approx.ftz.f32 	%f42, %f41;
	mul.ftz.f32 	%f43, %f42, 0f3F317218;
	fma.rn.ftz.f32 	%f44, %f43, 0f3CEDB3C1, 0f3F807C05;
	mul.ftz.f32 	%f45, %f43, 0f3CA06C67;
	fma.rn.ftz.f32 	%f46, %f43, %f45, %f44;
	mul.ftz.f32 	%f47, %f43, 0f3B95671A;
	mul.ftz.f32 	%f48, %f43, %f47;
	fma.rn.ftz.f32 	%f5, %f43, %f48, %f46;
	mov.f32 	%f73, %f5;

BB0_14:
	mov.f32 	%f6, %f73;
	mov.f32 	%f49, 0f3F800000;
	min.ftz.f32 	%f50, %f6, %f49;
	max.ftz.f32 	%f75, %f40, %f50;
	bra.uni 	BB0_16;

BB0_3:
	setp.eq.s32	%p9, %r4, 2;
	@%p9 bra 	BB0_4;
	bra.uni 	BB0_16;

BB0_4:
	setp.eq.ftz.f32	%p12, %f1, 0f00000000;
	mov.f32 	%f52, 0f00000000;
	mov.f32 	%f74, %f52;
	@%p12 bra 	BB0_6;

	abs.ftz.f32 	%f53, %f1;
	lg2.approx.ftz.f32 	%f54, %f53;
	mul.ftz.f32 	%f55, %f54, 0f3F317218;
	fma.rn.ftz.f32 	%f56, %f55, 0f3BC4E3A1, 0f3F801570;
	mul.ftz.f32 	%f57, %f55, 0f3B884DC1;
	fma.rn.ftz.f32 	%f58, %f55, %f57, %f56;
	mul.ftz.f32 	%f59, %f55, 0f3A7FD3C5;
	mul.ftz.f32 	%f60, %f55, %f59;
	fma.rn.ftz.f32 	%f8, %f55, %f60, %f58;
	mov.f32 	%f74, %f8;

BB0_6:
	mov.f32 	%f9, %f74;
	mov.f32 	%f61, 0f3F800000;
	min.ftz.f32 	%f62, %f9, %f61;
	max.ftz.f32 	%f75, %f52, %f62;
	bra.uni 	BB0_16;

BB0_8:
	setp.ne.s32	%p7, %r4, 4;
	@%p7 bra 	BB0_16;

	setp.eq.ftz.f32	%p10, %f1, 0f00000000;
	mov.f32 	%f28, 0f00000000;
	mov.f32 	%f72, %f28;
	@%p10 bra 	BB0_11;

	abs.ftz.f32 	%f29, %f1;
	lg2.approx.ftz.f32 	%f30, %f29;
	mul.ftz.f32 	%f31, %f30, 0f3F317218;
	fma.rn.ftz.f32 	%f32, %f31, 0f39A14B95, 0f3F7FF870;
	mul.ftz.f32 	%f33, %f31, 0f3B9B6A75;
	fma.rn.ftz.f32 	%f34, %f31, %f33, %f32;
	mul.ftz.f32 	%f35, %f31, 0f3B9D8046;
	mul.ftz.f32 	%f36, %f31, %f35;
	fma.rn.ftz.f32 	%f2, %f31, %f36, %f34;
	mov.f32 	%f72, %f2;

BB0_11:
	mov.f32 	%f3, %f72;
	mov.f32 	%f37, 0f3F800000;
	min.ftz.f32 	%f38, %f3, %f37;
	max.ftz.f32 	%f75, %f28, %f38;

BB0_16:
	cvta.to.global.u64 	%rd3, %rd1;
	cvt.u64.u32	%rd4, %r2;
	mul.lo.s64 	%rd5, %rd4, %rd2;
	shr.u64 	%rd6, %rd5, 3;
	cvt.u64.u32	%rd7, %r1;
	add.s64 	%rd8, %rd6, %rd7;
	shl.b64 	%rd9, %rd8, 3;
	add.s64 	%rd10, %rd3, %rd9;
	ld.global.v2.f32 	{%f66, %f67}, [%rd10];
	mul.ftz.f32 	%f70, %f75, %f67;
	mul.ftz.f32 	%f71, %f75, %f66;
	st.global.v2.f32 	[%rd10], {%f71, %f70};

BB0_17:
	ret;
}

	// .globl	fourierFilter
.visible .entry fourierFilter(
	.param .u64 fourierFilter_param_0,
	.param .u64 fourierFilter_param_1,
	.param .u32 fourierFilter_param_2,
	.param .f32 fourierFilter_param_3,
	.param .f32 fourierFilter_param_4,
	.param .f32 fourierFilter_param_5,
	.param .f32 fourierFilter_param_6
)
{
	.reg .pred 	%p<20>;
	.reg .f32 	%f<62>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [fourierFilter_param_0];
	ld.param.u64 	%rd2, [fourierFilter_param_1];
	ld.param.f32 	%f15, [fourierFilter_param_3];
	ld.param.f32 	%f16, [fourierFilter_param_4];
	ld.param.f32 	%f17, [fourierFilter_param_5];
	ld.param.f32 	%f18, [fourierFilter_param_6];
	ld.param.u32 	%r4, [fourierFilter_param_2];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r7;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r2, %r8, %r9, %r10;
	shr.u32 	%r11, %r4, 31;
	add.s32 	%r12, %r4, %r11;
	shr.s32 	%r3, %r12, 1;
	add.s32 	%r13, %r3, 1;
	setp.ge.s32	%p1, %r1, %r13;
	setp.ge.s32	%p2, %r2, %r4;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB1_11;

	cvt.rn.f32.s32	%f19, %r1;
	cvt.rn.f32.s32	%f20, %r4;
	mul.ftz.f32 	%f21, %f20, 0f3F000000;
	cvt.rn.f32.s32	%f22, %r2;
	setp.gt.ftz.f32	%p4, %f22, %f21;
	sub.ftz.f32 	%f23, %f20, %f22;
	neg.ftz.f32 	%f24, %f23;
	selp.f32	%f25, %f24, %f22, %p4;
	mul.ftz.f32 	%f26, %f25, %f25;
	fma.rn.ftz.f32 	%f27, %f19, %f19, %f26;
	sqrt.approx.ftz.f32 	%f1, %f27;
	add.ftz.f32 	%f2, %f16, %f18;
	sub.ftz.f32 	%f3, %f15, %f17;
	setp.gt.ftz.f32	%p5, %f3, 0f00000000;
	mov.f32 	%f60, %f3;
	@%p5 bra 	BB1_3;

	add.s32 	%r14, %r3, -1;
	cvt.rn.f32.s32	%f4, %r14;
	mov.f32 	%f60, %f4;

BB1_3:
	mov.f32 	%f5, %f60;
	setp.le.ftz.f32	%p6, %f1, %f5;
	selp.f32	%f61, 0f3F800000, 0f00000000, %p6;
	setp.leu.ftz.f32	%p7, %f17, 0f00000000;
	@%p7 bra 	BB1_5;

	mov.f32 	%f28, 0f3F800000;
	sub.ftz.f32 	%f29, %f28, %f61;
	sub.ftz.f32 	%f30, %f1, %f3;
	mul.ftz.f32 	%f31, %f30, %f30;
	add.ftz.f32 	%f32, %f17, %f17;
	mul.ftz.f32 	%f33, %f32, %f17;
	div.approx.ftz.f32 	%f34, %f31, %f33;
	mul.ftz.f32 	%f35, %f34, 0fBFB8AA3B;
	ex2.approx.ftz.f32 	%f36, %f35;
	mul.ftz.f32 	%f37, %f29, %f36;
	setp.gt.ftz.f32	%p8, %f37, 0f3A83126F;
	selp.f32	%f61, %f37, %f61, %p8;

BB1_5:
	setp.eq.ftz.f32	%p9, %f3, 0f00000000;
	setp.gt.ftz.f32	%p10, %f17, 0f00000000;
	and.pred  	%p11, %p10, %p9;
	setp.eq.ftz.f32	%p12, %f2, 0f00000000;
	and.pred  	%p13, %p11, %p12;
	setp.eq.ftz.f32	%p14, %f18, 0f00000000;
	and.pred  	%p15, %p13, %p14;
	@!%p15 bra 	BB1_7;
	bra.uni 	BB1_6;

BB1_6:
	sub.ftz.f32 	%f38, %f1, %f3;
	mul.ftz.f32 	%f39, %f38, %f38;
	add.ftz.f32 	%f40, %f17, %f17;
	mul.ftz.f32 	%f41, %f40, %f17;
	div.approx.ftz.f32 	%f42, %f39, %f41;
	mul.ftz.f32 	%f43, %f42, 0fBFB8AA3B;
	ex2.approx.ftz.f32 	%f61, %f43;

BB1_7:
	setp.leu.ftz.f32	%p16, %f2, 0f00000000;
	@%p16 bra 	BB1_10;

	setp.ge.ftz.f32	%p17, %f1, %f2;
	selp.f32	%f11, 0f3F800000, 0f00000000, %p17;
	mul.ftz.f32 	%f61, %f11, %f61;
	setp.leu.ftz.f32	%p18, %f18, 0f00000000;
	@%p18 bra 	BB1_10;

	mov.f32 	%f44, 0f3F800000;
	sub.ftz.f32 	%f45, %f44, %f11;
	sub.ftz.f32 	%f46, %f1, %f2;
	mul.ftz.f32 	%f47, %f46, %f46;
	add.ftz.f32 	%f48, %f18, %f18;
	mul.ftz.f32 	%f49, %f48, %f18;
	div.approx.ftz.f32 	%f50, %f47, %f49;
	mul.ftz.f32 	%f51, %f50, 0fBFB8AA3B;
	ex2.approx.ftz.f32 	%f52, %f51;
	mul.ftz.f32 	%f53, %f45, %f52;
	setp.gt.ftz.f32	%p19, %f53, 0f3A83126F;
	selp.f32	%f61, %f53, %f61, %p19;

BB1_10:
	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32	%rd4, %r2;
	mul.lo.s64 	%rd5, %rd4, %rd2;
	shr.u64 	%rd6, %rd5, 3;
	cvt.s64.s32	%rd7, %r1;
	add.s64 	%rd8, %rd6, %rd7;
	shl.b64 	%rd9, %rd8, 3;
	add.s64 	%rd10, %rd3, %rd9;
	ld.global.v2.f32 	{%f54, %f55}, [%rd10];
	mul.ftz.f32 	%f58, %f61, %f55;
	mul.ftz.f32 	%f59, %f61, %f54;
	st.global.v2.f32 	[%rd10], {%f59, %f58};

BB1_11:
	ret;
}

	// .globl	doseWeighting
.visible .entry doseWeighting(
	.param .u64 doseWeighting_param_0,
	.param .u64 doseWeighting_param_1,
	.param .u32 doseWeighting_param_2,
	.param .f32 doseWeighting_param_3,
	.param .f32 doseWeighting_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<25>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [doseWeighting_param_0];
	ld.param.u64 	%rd2, [doseWeighting_param_1];
	ld.param.f32 	%f1, [doseWeighting_param_3];
	ld.param.f32 	%f2, [doseWeighting_param_4];
	ld.param.u32 	%r4, [doseWeighting_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r2, %r8, %r9, %r10;
	shr.u32 	%r11, %r4, 31;
	add.s32 	%r12, %r4, %r11;
	shr.s32 	%r3, %r12, 1;
	add.s32 	%r13, %r3, 1;
	setp.ge.s32	%p1, %r1, %r13;
	setp.ge.s32	%p2, %r2, %r4;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB2_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.rn.f32.s32	%f3, %r4;
	mul.ftz.f32 	%f4, %f3, 0f3F000000;
	cvt.rn.f32.s32	%f5, %r2;
	setp.gt.ftz.f32	%p4, %f5, %f4;
	sub.ftz.f32 	%f6, %f3, %f5;
	neg.ftz.f32 	%f7, %f6;
	selp.f32	%f8, %f7, %f5, %p4;
	cvt.rn.f32.s32	%f9, %r1;
	mul.ftz.f32 	%f10, %f8, %f8;
	fma.rn.ftz.f32 	%f11, %f9, %f9, %f10;
	sqrt.approx.ftz.f32 	%f12, %f11;
	cvt.rn.f32.s32	%f13, %r3;
	div.approx.ftz.f32 	%f14, %f13, %f2;
	div.approx.ftz.f32 	%f15, %f12, %f14;
	mul.ftz.f32 	%f16, %f15, %f1;
	mul.ftz.f32 	%f17, %f16, 0fBFB8AA3B;
	ex2.approx.ftz.f32 	%f18, %f17;
	cvt.s64.s32	%rd4, %r2;
	mul.lo.s64 	%rd5, %rd4, %rd2;
	shr.u64 	%rd6, %rd5, 3;
	cvt.s64.s32	%rd7, %r1;
	add.s64 	%rd8, %rd6, %rd7;
	shl.b64 	%rd9, %rd8, 3;
	add.s64 	%rd10, %rd3, %rd9;
	ld.global.v2.f32 	{%f19, %f20}, [%rd10];
	mul.ftz.f32 	%f23, %f18, %f20;
	mul.ftz.f32 	%f24, %f18, %f19;
	st.global.v2.f32 	[%rd10], {%f24, %f23};

BB2_2:
	ret;
}

	// .globl	conjMul
.visible .entry conjMul(
	.param .u64 conjMul_param_0,
	.param .u64 conjMul_param_1,
	.param .u64 conjMul_param_2,
	.param .u32 conjMul_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<14>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [conjMul_param_0];
	ld.param.u64 	%rd2, [conjMul_param_1];
	ld.param.u64 	%rd3, [conjMul_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	mov.u32 	%r6, %ntid.y;
	mov.u32 	%r7, %ctaid.y;
	mov.u32 	%r8, %tid.y;
	mad.lo.s32 	%r2, %r6, %r7, %r8;
	ld.param.u32 	%r9, [conjMul_param_3];
	shr.u32 	%r10, %r9, 31;
	add.s32 	%r11, %r9, %r10;
	shr.s32 	%r12, %r11, 1;
	add.s32 	%r13, %r12, 1;
	setp.ge.u32	%p1, %r1, %r13;
	setp.ge.u32	%p2, %r2, %r9;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB3_2;

	cvta.to.global.u64 	%rd4, %rd1;
	cvt.u64.u32	%rd5, %r2;
	mul.lo.s64 	%rd6, %rd5, %rd3;
	shr.u64 	%rd7, %rd6, 3;
	cvt.u64.u32	%rd8, %r1;
	add.s64 	%rd9, %rd7, %rd8;
	shl.b64 	%rd10, %rd9, 3;
	add.s64 	%rd11, %rd4, %rd10;
	cvta.to.global.u64 	%rd12, %rd2;
	add.s64 	%rd13, %rd12, %rd10;
	ld.global.v2.f32 	{%f1, %f2}, [%rd13];
	ld.global.v2.f32 	{%f5, %f6}, [%rd11];
	mul.ftz.f32 	%f9, %f6, %f2;
	mul.ftz.f32 	%f10, %f5, %f2;
	mul.ftz.f32 	%f11, %f6, %f1;
	sub.ftz.f32 	%f12, %f10, %f11;
	fma.rn.ftz.f32 	%f13, %f5, %f1, %f9;
	st.global.v2.f32 	[%rd11], {%f13, %f12};

BB3_2:
	ret;
}

	// .globl	maxShift
.visible .entry maxShift(
	.param .u64 maxShift_param_0,
	.param .u64 maxShift_param_1,
	.param .u32 maxShift_param_2,
	.param .u32 maxShift_param_3
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<16>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [maxShift_param_0];
	ld.param.u64 	%rd2, [maxShift_param_1];
	ld.param.u32 	%r3, [maxShift_param_2];
	ld.param.u32 	%r4, [maxShift_param_3];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r2, %r8, %r9, %r10;
	setp.ge.u32	%p1, %r1, %r3;
	setp.ge.u32	%p2, %r2, %r3;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB4_7;

	cvt.rn.f32.u32	%f14, %r1;
	cvt.rn.f32.u32	%f15, %r2;
	shr.u32 	%r11, %r3, 31;
	add.s32 	%r12, %r3, %r11;
	shr.s32 	%r13, %r12, 1;
	cvt.rn.f32.s32	%f3, %r13;
	setp.leu.ftz.f32	%p4, %f14, %f3;
	@%p4 bra 	BB4_3;

	cvt.rn.f32.s32	%f8, %r3;
	sub.ftz.f32 	%f14, %f8, %f14;

BB4_3:
	setp.leu.ftz.f32	%p5, %f15, %f3;
	@%p5 bra 	BB4_5;

	cvt.rn.f32.s32	%f9, %r3;
	sub.ftz.f32 	%f15, %f9, %f15;

BB4_5:
	mul.ftz.f32 	%f10, %f15, %f15;
	fma.rn.ftz.f32 	%f11, %f14, %f14, %f10;
	sqrt.approx.ftz.f32 	%f12, %f11;
	cvt.rn.f32.s32	%f13, %r4;
	setp.leu.ftz.f32	%p6, %f12, %f13;
	@%p6 bra 	BB4_7;

	cvta.to.global.u64 	%rd3, %rd1;
	cvt.u64.u32	%rd4, %r2;
	mul.lo.s64 	%rd5, %rd4, %rd2;
	add.s64 	%rd6, %rd3, %rd5;
	mul.wide.u32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	mov.u32 	%r14, 0;
	st.global.u32 	[%rd8], %r14;

BB4_7:
	ret;
}

	// .globl	maxShiftWeighted
.visible .entry maxShiftWeighted(
	.param .u64 maxShiftWeighted_param_0,
	.param .u64 maxShiftWeighted_param_1,
	.param .u32 maxShiftWeighted_param_2,
	.param .u32 maxShiftWeighted_param_3
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<19>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [maxShiftWeighted_param_0];
	ld.param.u64 	%rd3, [maxShiftWeighted_param_1];
	ld.param.u32 	%r3, [maxShiftWeighted_param_2];
	ld.param.u32 	%r4, [maxShiftWeighted_param_3];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r2, %r8, %r9, %r10;
	setp.ge.u32	%p1, %r1, %r3;
	setp.ge.u32	%p2, %r2, %r3;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB5_8;

	cvt.rn.f32.u32	%f17, %r1;
	cvt.rn.f32.u32	%f18, %r2;
	shr.u32 	%r11, %r3, 31;
	add.s32 	%r12, %r3, %r11;
	shr.s32 	%r13, %r12, 1;
	cvt.rn.f32.s32	%f3, %r13;
	setp.leu.ftz.f32	%p4, %f17, %f3;
	@%p4 bra 	BB5_3;

	cvt.rn.f32.s32	%f9, %r3;
	sub.ftz.f32 	%f17, %f9, %f17;

BB5_3:
	setp.leu.ftz.f32	%p5, %f18, %f3;
	@%p5 bra 	BB5_5;

	cvt.rn.f32.s32	%f10, %r3;
	sub.ftz.f32 	%f18, %f10, %f18;

BB5_5:
	mul.ftz.f32 	%f11, %f18, %f18;
	fma.rn.ftz.f32 	%f12, %f17, %f17, %f11;
	sqrt.approx.ftz.f32 	%f8, %f12;
	cvt.u64.u32	%rd4, %r2;
	mul.lo.s64 	%rd5, %rd4, %rd3;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd5;
	cvt.rn.f32.s32	%f13, %r4;
	setp.gt.ftz.f32	%p6, %f8, %f13;
	mul.wide.u32 	%rd8, %r1, 4;
	add.s64 	%rd1, %rd7, %rd8;
	@%p6 bra 	BB5_7;
	bra.uni 	BB5_6;

BB5_7:
	mov.u32 	%r14, 0;
	st.global.u32 	[%rd1], %r14;
	bra.uni 	BB5_8;

BB5_6:
	ld.global.f32 	%f14, [%rd1];
	add.ftz.f32 	%f15, %f8, 0f38D1B717;
	div.approx.ftz.f32 	%f16, %f14, %f15;
	st.global.f32 	[%rd1], %f16;

BB5_8:
	ret;
}

	// .globl	findPeak
.visible .entry findPeak(
	.param .u64 findPeak_param_0,
	.param .u64 findPeak_param_1,
	.param .u64 findPeak_param_2,
	.param .u64 findPeak_param_3,
	.param .u32 findPeak_param_4,
	.param .f32 findPeak_param_5
)
{
	.reg .pred 	%p<27>;
	.reg .b16 	%rs<3>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<42>;


	ld.param.u64 	%rd10, [findPeak_param_0];
	ld.param.u64 	%rd11, [findPeak_param_1];
	ld.param.u64 	%rd12, [findPeak_param_2];
	ld.param.u64 	%rd13, [findPeak_param_3];
	ld.param.u32 	%r4, [findPeak_param_4];
	ld.param.f32 	%f2, [findPeak_param_5];
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r5, %r6, %r7;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r2, %r8, %r9, %r10;
	setp.ge.u32	%p3, %r1, %r4;
	setp.ge.u32	%p4, %r2, %r4;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB6_13;

	add.s32 	%r11, %r1, -1;
	setp.lt.s32	%p7, %r11, 0;
	add.s32 	%r3, %r4, -1;
	selp.b32	%r12, %r3, %r11, %p7;
	cvta.to.global.u64 	%rd1, %rd10;
	cvt.u64.u32	%rd2, %r2;
	mul.lo.s64 	%rd14, %rd2, %rd11;
	add.s64 	%rd3, %rd1, %rd14;
	cvt.u64.u32	%rd4, %r1;
	mul.wide.u32 	%rd15, %r1, 4;
	add.s64 	%rd16, %rd3, %rd15;
	cvt.s64.s32	%rd5, %r12;
	mul.wide.s32 	%rd17, %r12, 4;
	add.s64 	%rd18, %rd3, %rd17;
	ld.global.f32 	%f3, [%rd18];
	ld.global.f32 	%f1, [%rd16];
	mov.pred 	%p26, 0;
	setp.geu.ftz.f32	%p8, %f3, %f1;
	@%p8 bra 	BB6_10;

	add.s32 	%r13, %r1, 1;
	add.s32 	%r14, %r2, -1;
	setp.lt.s32	%p10, %r14, 0;
	selp.b32	%r15, %r3, %r14, %p10;
	add.s32 	%r16, %r2, 1;
	setp.ge.s32	%p11, %r16, %r4;
	cvt.s64.s32	%rd19, %r16;
	selp.b64	%rd20, 0, %rd19, %p11;
	mul.lo.s64 	%rd21, %rd20, %rd11;
	add.s64 	%rd6, %rd1, %rd21;
	cvt.s64.s32	%rd22, %r15;
	mul.lo.s64 	%rd23, %rd22, %rd11;
	add.s64 	%rd7, %rd1, %rd23;
	cvt.s64.s32	%rd24, %r13;
	setp.ge.s32	%p12, %r13, %r4;
	selp.b64	%rd8, 0, %rd24, %p12;
	shl.b64 	%rd25, %rd8, 2;
	add.s64 	%rd26, %rd3, %rd25;
	ld.global.f32 	%f4, [%rd26];
	setp.geu.ftz.f32	%p13, %f4, %f1;
	@%p13 bra 	BB6_10;

	shl.b64 	%rd27, %rd4, 2;
	add.s64 	%rd28, %rd7, %rd27;
	ld.global.f32 	%f5, [%rd28];
	setp.geu.ftz.f32	%p15, %f5, %f1;
	@%p15 bra 	BB6_10;

	add.s64 	%rd30, %rd6, %rd27;
	ld.global.f32 	%f6, [%rd30];
	setp.geu.ftz.f32	%p17, %f6, %f1;
	@%p17 bra 	BB6_10;

	shl.b64 	%rd31, %rd5, 2;
	add.s64 	%rd32, %rd7, %rd31;
	ld.global.f32 	%f7, [%rd32];
	setp.gtu.ftz.f32	%p19, %f7, %f1;
	@%p19 bra 	BB6_10;

	add.s64 	%rd34, %rd6, %rd31;
	ld.global.f32 	%f8, [%rd34];
	setp.geu.ftz.f32	%p21, %f8, %f1;
	@%p21 bra 	BB6_10;

	add.s64 	%rd36, %rd7, %rd25;
	ld.global.f32 	%f9, [%rd36];
	setp.gtu.ftz.f32	%p23, %f9, %f1;
	@%p23 bra 	BB6_10;

	add.s64 	%rd38, %rd6, %rd25;
	ld.global.f32 	%f10, [%rd38];
	setp.geu.ftz.f32	%p25, %f10, %f1;
	@%p25 bra 	BB6_10;

	setp.ge.ftz.f32	%p26, %f1, %f2;

BB6_10:
	cvta.to.global.u64 	%rd39, %rd12;
	mul.lo.s64 	%rd40, %rd2, %rd13;
	add.s64 	%rd41, %rd40, %rd4;
	add.s64 	%rd9, %rd39, %rd41;
	@%p26 bra 	BB6_12;
	bra.uni 	BB6_11;

BB6_12:
	mov.u16 	%rs2, 0;
	st.global.u8 	[%rd9], %rs2;
	bra.uni 	BB6_13;

BB6_11:
	mov.u16 	%rs1, 1;
	st.global.u8 	[%rd9], %rs1;

BB6_13:
	ret;
}

	// .globl	rot3d
.visible .entry rot3d(
	.param .u32 rot3d_param_0,
	.param .align 4 .b8 rot3d_param_1[12],
	.param .align 4 .b8 rot3d_param_2[12],
	.param .align 4 .b8 rot3d_param_3[12],
	.param .u64 rot3d_param_4
)
{
	.reg .f32 	%f<33>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<6>;


	ld.param.f32 	%f1, [rot3d_param_1+8];
	ld.param.f32 	%f2, [rot3d_param_1+4];
	ld.param.f32 	%f3, [rot3d_param_1];
	ld.param.f32 	%f4, [rot3d_param_2+8];
	ld.param.f32 	%f5, [rot3d_param_2+4];
	ld.param.f32 	%f6, [rot3d_param_2];
	ld.param.f32 	%f7, [rot3d_param_3+8];
	ld.param.f32 	%f8, [rot3d_param_3+4];
	ld.param.f32 	%f9, [rot3d_param_3];
	ld.param.u64 	%rd1, [rot3d_param_4];
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ntid.y;
	ld.param.u32 	%r6, [rot3d_param_0];
	shr.u32 	%r7, %r6, 31;
	add.s32 	%r8, %r6, %r7;
	shr.s32 	%r9, %r8, 1;
	mad.lo.s32 	%r10, %r2, %r1, %r3;
	mov.u32 	%r11, %tid.y;
	mov.u32 	%r12, %ctaid.z;
	mov.u32 	%r13, %ntid.z;
	cvt.rn.f32.s32	%f10, %r9;
	cvt.rn.f32.u32	%f11, %r10;
	mad.lo.s32 	%r14, %r5, %r4, %r11;
	mov.u32 	%r15, %tid.z;
	sub.ftz.f32 	%f12, %f11, %f10;
	cvt.rn.f32.u32	%f13, %r14;
	mad.lo.s32 	%r16, %r13, %r12, %r15;
	sub.ftz.f32 	%f14, %f13, %f10;
	cvt.rn.f32.u32	%f15, %r16;
	fma.rn.ftz.f32 	%f16, %f3, %f12, %f10;
	fma.rn.ftz.f32 	%f17, %f2, %f12, %f10;
	fma.rn.ftz.f32 	%f18, %f1, %f12, %f10;
	sub.ftz.f32 	%f19, %f15, %f10;
	fma.rn.ftz.f32 	%f20, %f6, %f14, %f16;
	fma.rn.ftz.f32 	%f21, %f5, %f14, %f17;
	fma.rn.ftz.f32 	%f22, %f4, %f14, %f18;
	fma.rn.ftz.f32 	%f23, %f9, %f19, %f20;
	fma.rn.ftz.f32 	%f24, %f8, %f19, %f21;
	fma.rn.ftz.f32 	%f25, %f7, %f19, %f22;
	add.ftz.f32 	%f26, %f23, 0f3F000000;
	add.ftz.f32 	%f27, %f24, 0f3F000000;
	add.ftz.f32 	%f28, %f25, 0f3F000000;
	tex.3d.v4.f32.f32	{%f29, %f30, %f31, %f32}, [texVol, {%f26, %f27, %f28, %f28}];
	cvta.to.global.u64 	%rd3, %rd1;
	mad.lo.s32 	%r17, %r16, %r6, %r14;
	mad.lo.s32 	%r18, %r17, %r6, %r10;
	mul.wide.u32 	%rd4, %r18, 4;
	add.s64 	%rd5, %rd3, %rd4;
	st.global.f32 	[%rd5], %f29;
	ret;
}


